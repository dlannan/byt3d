------------------------------------------------------------------------------------------------------------  
-- 
-- Autogenerated lua Fragment Shaders 
-- 
sVoxelMapFragment_frag = [[  
// glslf output by Cg compiler
// cgc version 3.1.0013, build date Apr 18 2012
// command line args: -quiet -profile glslf -po version=330
// source file: sVoxelMapFragment.fcg
//vendor NVIDIA Corporation
//version 3.1.0.13
//profile glslf
//program main
//semantic main.eye
//semantic main.up
//semantic main.left
//semantic main.s
//var float3 eye :  : _eye1 : 3 : 1
//var float3 up :  : _up1 : 4 : 1
//var float3 left :  : _left1 : 5 : 1
//var sampler2DARRAY s :  : _s1 : 6 : 1
//var float3 tex : $vin.TEXCOORD0 : TEXCOORD0 : 0 : 1
//var float4 iColor : $vin.COLOR :  : 1 : 0
//var float4 oColor : $vout.COLOR : COLOR : 2 : 1

#version 330

vec4 _oColor1;
float _TMP4;
float _TMP3;
float _TMP6;
float _TMP5;
vec4 _TMP2;
float _TMP8;
float _TMP7;
float _TMP1;
uniform vec3 _eye1;
uniform vec3 _up1;
uniform vec3 _left1;
uniform sampler2DArray _s1;
vec3 _v0014;
vec3 _v0020;
float _b0030;
vec3 _v0038;
in vec4 cg_TexCoord0;
out vec4 cg_FragColor;

 // main procedure, the original name was main
void main()
{

    vec3 _view;
    vec3 _dir;
    vec3 _P;
    float _depth;
    vec3 _N;
    int _i1;
    vec3 _t1;
    vec3 _ta1;
    vec4 _v1;
    vec3 _L;

    _v0014 = -_eye1;
    _TMP5 = dot(_v0014, _v0014);
    _TMP6 = inversesqrt(_TMP5);
    _view = _TMP6*_v0014;
    _v0020 = _view*2.00000000E+000 + cg_TexCoord0.x*_left1 + cg_TexCoord0.y*_up1;
    _TMP5 = dot(_v0020, _v0020);
    _TMP6 = inversesqrt(_TMP5);
    _dir = _TMP6*_v0020;
    _P = _eye1;
    _depth = 0.00000000E+000;
    _N = vec3( 0.00000000E+000, 0.00000000E+000, 0.00000000E+000);
    _i1 = 0;
    for (; _i1 < 800; _i1 = _i1 + 1) { // for begin
        _t1 = _P*1.56250000E-002;
        _t1 = (1.00000000E+000 + _t1)*5.00000000E-001;
        _ta1 = abs(_t1);
        if (_ta1.x < 1.00000000E+000 && _ta1.y < 1.00000000E+000 && _ta1.z < 1.00000000E+000) { // if begin
            _t1.z = _t1.z*6.40000000E+001;
            _v1 = texture(_s1, _t1);
            if (_v1.w != 0.00000000E+000) { // if begin
                _b0030 = float(_i1)/4.00000000E+002;
                _TMP1 = min(1.00000000E+000, _b0030);
                _depth = 1.39999998E+000 - _TMP1;
                _TMP7 = dot(_v1, _v1);
                _TMP8 = inversesqrt(_TMP7);
                _TMP2 = _TMP8*_v1;
                _N = _TMP2.xyz;
                { // break begin
                    break;
                } // end break
            } // end if
        } // end if
        _P = _P + _dir;
    } // end for
    _v0038 = -_view;
    _TMP5 = dot(_v0038, _v0038);
    _TMP6 = inversesqrt(_TMP5);
    _L = _TMP6*_v0038;
    _oColor1 = vec4( 0.00000000E+000, 0.00000000E+000, 0.00000000E+000, 0.00000000E+000);
    if (_depth != 0.00000000E+000) { // if begin
        _TMP3 = dot(_L, _N);
        _TMP4 = max(0.00000000E+000, _TMP3);
        _oColor1 = vec4(2.00000003E-001 + _TMP4, 2.00000003E-001 + _TMP4, 2.00000003E-001 + _TMP4, 2.00000003E-001 + _TMP4);
    } // end if
    cg_FragColor = _oColor1;
} // main end
]] 
-- 
------------------------------------------------------------------------------------------------------------  
