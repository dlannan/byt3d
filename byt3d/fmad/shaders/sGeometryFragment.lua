------------------------------------------------------------------------------------------------------------  
-- 
-- Autogenerated lua Fragment Shaders 
-- 
sGeometryFragment_frag = [[  
// glslf output by Cg compiler
// cgc version 3.1.0013, build date Apr 18 2012
// command line args: -quiet -profile glslf -po version=330
// source file: sGeometryFragment.fcg
//vendor NVIDIA Corporation
//version 3.1.0.13
//profile glslf
//program main
//semantic main.lightDir
//semantic main.lightColor
//semantic main.MapDiffuseColor : TEXUNIT0
//semantic main.MapNormal
//semantic main.MapEnv
//semantic main.diffuseColor
//semantic main.enableTexture
//semantic main.eyePos
//semantic main.MaterialID
//var sampler2D MapDiffuseColor : TEXUNIT0 : _MapDiffuseColor1 0 : 13 : 1
//var samplerCUBE MapEnv :  : _MapEnv1 : 15 : 1
//var float4 diffuseColor :  : _diffuseColor1 : 16 : 1
//var bool enableTexture :  : _enableTexture1 : 17 : 1
//var int MaterialID :  : _MaterialID1 : 19 : 1
//var float2 tex : $vin.TEXCOORD0 : TEXCOORD0 : 0 : 1
//var float3 vN : $vin.TEXCOORD1 : TEXCOORD1 : 1 : 1
//var float4 vT : $vin.TEXCOORD2 : TEXCOORD2 : 2 : 1
//var float3 vB : $vin.TEXCOORD3 :  : 3 : 0
//var float3 vR : $vin.TEXCOORD4 : TEXCOORD4 : 4 : 1
//var float4 iColor : $vin.COLOR :  : 5 : 0
//var float4 Pos : $vin.WPOS :  : 6 : 0
//var float4 oColor0 : $vout.COLOR0 : COLOR0 : 7 : 1
//var float4 oColor1 : $vout.COLOR1 : COLOR1 : 8 : 1
//var float4 oColor2 : $vout.COLOR2 : COLOR2 : 9 : 1
//var float4 oColor3 : $vout.COLOR3 : COLOR3 : 10 : 1

precision mediump float;

vec4 _TMP3;
vec4 _TMP2;
float _TMP5;
float _TMP4;
vec4 _TMP0;
uniform sampler2D _MapDiffuseColor1;
//uniform samplerCube _MapEnv1;
uniform vec4 _diffuseColor1;
uniform bool _enableTexture1;
uniform int _MaterialID1;
varying vec4 cg_TexCoord4;
varying vec4 cg_TexCoord1;
varying vec4 cg_TexCoord0;
varying vec4 cg_TexCoord2;

 // main procedure, the original name was main
void main()
{
    vec3 _N;
    vec3 _R;

    _TMP0 = texture2D(_MapDiffuseColor1, cg_TexCoord0.xy);
    _TMP4 = dot(cg_TexCoord1.xyz, cg_TexCoord1.xyz);
    _TMP5 = inversesqrt(_TMP4);
    _N = _TMP5*cg_TexCoord1.xyz;
    _TMP4 = dot(cg_TexCoord4.xyz, cg_TexCoord4.xyz);
    _TMP5 = inversesqrt(_TMP4);
    _R = _TMP5*cg_TexCoord4.xyz;
    if (_enableTexture1) { // if begin
        _TMP2 = _TMP0.xyzw;
    } else {
        _TMP2 = _diffuseColor1;
    } // end if

    // _TMP3 = texture2D(_MapEnv1, _R.xy);
    float rem = mod(gl_FragCoord.x, 3.0);
    if(rem < 1.0) {
        gl_FragColor = vec4(_TMP2.x, _TMP2.y, _TMP2.z, _TMP2.w);
    }
    else {
        if(rem < 2.0) {
            gl_FragColor = vec4(_N.x, _N.y, _N.z, float(_MaterialID1));
        }
        else {
            gl_FragColor = vec4( cg_TexCoord2.x, cg_TexCoord2.y, cg_TexCoord2.z, 1.0 );
        }
    }
    // cg_FragData3 = vec4(_TMP3.x, _TMP3.y, _TMP3.z, 1.00000000E+000);
} // main end
]]

--
------------------------------------------------------------------------------------------------------------  
