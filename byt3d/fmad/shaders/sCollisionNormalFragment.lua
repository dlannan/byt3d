------------------------------------------------------------------------------------------------------------  
-- 
-- Autogenerated lua Fragment Shaders 
-- 
sCollisionNormalFragment_frag = [[  
// glslf output by Cg compiler
// cgc version 3.1.0013, build date Apr 18 2012
// command line args: -quiet -profile glslf -po version=330
// source file: sCollisionNormalFragment.fcg
//vendor NVIDIA Corporation
//version 3.1.0.13
//profile glslf
//program main
//semantic main.samplerMap
//var sampler2D samplerMap :  : _samplerMap2 : 1 : 1
//var float3 tex : $vin.TEXCOORD0 : TEXCOORD0 : 0 : 1
//var float4 oColor0 : $vout.COLOR0 : COLOR0 : 2 : 1

#version 330

vec4 _oColor01;
float _TMP0;
uniform sampler2DShadow _samplerMap2;
int _Depth00003;
vec3 _Tex0003;
uint _index00003;
uint _offset00003;
uvec4 _bin0003;
uint _b0003;
int _c00003;
int _c10003;
vec3 _coord0005;
int _Depth00007;
vec3 _Tex0007;
uint _index00007;
uint _offset00007;
uvec4 _bin0007;
uint _b0007;
int _c00007;
int _c10007;
vec3 _coord0009;
int _Depth00011;
vec3 _Tex0011;
uint _index00011;
uint _offset00011;
uvec4 _bin0011;
uint _b0011;
int _c00011;
int _c10011;
vec3 _coord0013;
int _Depth00015;
vec3 _Tex0015;
uint _index00015;
uint _offset00015;
uvec4 _bin0015;
uint _b0015;
int _c00015;
int _c10015;
vec3 _coord0017;
int _Depth00019;
vec3 _Tex0019;
uint _index00019;
uint _offset00019;
uvec4 _bin0019;
uint _b0019;
int _c00019;
int _c10019;
vec3 _coord0021;
int _Depth00023;
vec3 _Tex0023;
uint _index00023;
uint _offset00023;
uvec4 _bin0023;
uint _b0023;
int _c00023;
int _c10023;
vec3 _coord0025;
in vec4 cg_TexCoord0;
out vec4 cg_FragColor;

 // main procedure, the original name was main
void main()
{

    uint _sm00;
    uint _smp0;
    uint _s000;
    uint _s0p0;
    uint _sp00;
    uint _spp0;
    uint _Density;

    _Tex0003 = cg_TexCoord0.xyz + vec3( -3.90625000E-003, 0.00000000E+000, 0.00000000E+000);
    _Depth00003 = int((_Tex0003.z*2.56000000E+002));
    _index00003 = uint((_Depth00003 >> 5));
    _offset00003 = uint((_Depth00003 & 31));
    _Tex0003.x = (float(_index00003) + _Tex0003.x)*1.25000000E-001;
    _coord0005.xy = _Tex0003.xy;
    _coord0005.z = _Tex0003.z;
    _TMP0 = texture(_samplerMap2, _coord0005);
    _bin0003 = uvec4(uint((vec4(_TMP0, _TMP0, _TMP0, _TMP0)*2.55000000E+002).x), uint((vec4(_TMP0, _TMP0, _TMP0, _TMP0)*2.55000000E+002).y), uint((vec4(_TMP0, _TMP0, _TMP0, _TMP0)*2.55000000E+002).z), uint((vec4(_TMP0, _TMP0, _TMP0, _TMP0)*2.55000000E+002).w));
    _b0003 = _bin0003.x | (_bin0003.y << 8u) | (_bin0003.z << 16u) | (_bin0003.w << 24u);
    _c00003 = int(((_b0003 >> _offset00003) & 1u));
    _c10003 = int(((_b0003 >> (_offset00003 + 1u)) & 1u));
    _sm00 = uint((_c00003 + _c10003));
    _Tex0007 = cg_TexCoord0.xyz + vec3( -3.90625000E-003, 3.90625000E-003, 0.00000000E+000);
    _Depth00007 = int((_Tex0007.z*2.56000000E+002));
    _index00007 = uint((_Depth00007 >> 5));
    _offset00007 = uint((_Depth00007 & 31));
    _Tex0007.x = (float(_index00007) + _Tex0007.x)*1.25000000E-001;
    _coord0009.xy = _Tex0007.xy;
    _coord0009.z = _Tex0007.z;
    _TMP0 = texture(_samplerMap2, _coord0009);
    _bin0007 = uvec4(uint((vec4(_TMP0, _TMP0, _TMP0, _TMP0)*2.55000000E+002).x), uint((vec4(_TMP0, _TMP0, _TMP0, _TMP0)*2.55000000E+002).y), uint((vec4(_TMP0, _TMP0, _TMP0, _TMP0)*2.55000000E+002).z), uint((vec4(_TMP0, _TMP0, _TMP0, _TMP0)*2.55000000E+002).w));
    _b0007 = _bin0007.x | (_bin0007.y << 8u) | (_bin0007.z << 16u) | (_bin0007.w << 24u);
    _c00007 = int(((_b0007 >> _offset00007) & 1u));
    _c10007 = int(((_b0007 >> (_offset00007 + 1u)) & 1u));
    _smp0 = uint((_c00007 + _c10007));
    _Tex0011 = cg_TexCoord0.xyz;
    _Depth00011 = int((cg_TexCoord0.z*2.56000000E+002));
    _index00011 = uint((_Depth00011 >> 5));
    _offset00011 = uint((_Depth00011 & 31));
    _Tex0011.x = (float(_index00011) + cg_TexCoord0.x)*1.25000000E-001;
    _coord0013.xy = _Tex0011.xy;
    _coord0013.z = cg_TexCoord0.z;
    _TMP0 = texture(_samplerMap2, _coord0013);
    _bin0011 = uvec4(uint((vec4(_TMP0, _TMP0, _TMP0, _TMP0)*2.55000000E+002).x), uint((vec4(_TMP0, _TMP0, _TMP0, _TMP0)*2.55000000E+002).y), uint((vec4(_TMP0, _TMP0, _TMP0, _TMP0)*2.55000000E+002).z), uint((vec4(_TMP0, _TMP0, _TMP0, _TMP0)*2.55000000E+002).w));
    _b0011 = _bin0011.x | (_bin0011.y << 8u) | (_bin0011.z << 16u) | (_bin0011.w << 24u);
    _c00011 = int(((_b0011 >> _offset00011) & 1u));
    _c10011 = int(((_b0011 >> (_offset00011 + 1u)) & 1u));
    _s000 = uint((_c00011 + _c10011));
    _Tex0015 = cg_TexCoord0.xyz + vec3( 0.00000000E+000, 3.90625000E-003, 0.00000000E+000);
    _Depth00015 = int((_Tex0015.z*2.56000000E+002));
    _index00015 = uint((_Depth00015 >> 5));
    _offset00015 = uint((_Depth00015 & 31));
    _Tex0015.x = (float(_index00015) + _Tex0015.x)*1.25000000E-001;
    _coord0017.xy = _Tex0015.xy;
    _coord0017.z = _Tex0015.z;
    _TMP0 = texture(_samplerMap2, _coord0017);
    _bin0015 = uvec4(uint((vec4(_TMP0, _TMP0, _TMP0, _TMP0)*2.55000000E+002).x), uint((vec4(_TMP0, _TMP0, _TMP0, _TMP0)*2.55000000E+002).y), uint((vec4(_TMP0, _TMP0, _TMP0, _TMP0)*2.55000000E+002).z), uint((vec4(_TMP0, _TMP0, _TMP0, _TMP0)*2.55000000E+002).w));
    _b0015 = _bin0015.x | (_bin0015.y << 8u) | (_bin0015.z << 16u) | (_bin0015.w << 24u);
    _c00015 = int(((_b0015 >> _offset00015) & 1u));
    _c10015 = int(((_b0015 >> (_offset00015 + 1u)) & 1u));
    _s0p0 = uint((_c00015 + _c10015));
    _Tex0019 = cg_TexCoord0.xyz + vec3( 3.90625000E-003, 0.00000000E+000, 0.00000000E+000);
    _Depth00019 = int((_Tex0019.z*2.56000000E+002));
    _index00019 = uint((_Depth00019 >> 5));
    _offset00019 = uint((_Depth00019 & 31));
    _Tex0019.x = (float(_index00019) + _Tex0019.x)*1.25000000E-001;
    _coord0021.xy = _Tex0019.xy;
    _coord0021.z = _Tex0019.z;
    _TMP0 = texture(_samplerMap2, _coord0021);
    _bin0019 = uvec4(uint((vec4(_TMP0, _TMP0, _TMP0, _TMP0)*2.55000000E+002).x), uint((vec4(_TMP0, _TMP0, _TMP0, _TMP0)*2.55000000E+002).y), uint((vec4(_TMP0, _TMP0, _TMP0, _TMP0)*2.55000000E+002).z), uint((vec4(_TMP0, _TMP0, _TMP0, _TMP0)*2.55000000E+002).w));
    _b0019 = _bin0019.x | (_bin0019.y << 8u) | (_bin0019.z << 16u) | (_bin0019.w << 24u);
    _c00019 = int(((_b0019 >> _offset00019) & 1u));
    _c10019 = int(((_b0019 >> (_offset00019 + 1u)) & 1u));
    _sp00 = uint((_c00019 + _c10019));
    _Tex0023 = cg_TexCoord0.xyz + vec3( 3.90625000E-003, 3.90625000E-003, 0.00000000E+000);
    _Depth00023 = int((_Tex0023.z*2.56000000E+002));
    _index00023 = uint((_Depth00023 >> 5));
    _offset00023 = uint((_Depth00023 & 31));
    _Tex0023.x = (float(_index00023) + _Tex0023.x)*1.25000000E-001;
    _coord0025.xy = _Tex0023.xy;
    _coord0025.z = _Tex0023.z;
    _TMP0 = texture(_samplerMap2, _coord0025);
    _bin0023 = uvec4(uint((vec4(_TMP0, _TMP0, _TMP0, _TMP0)*2.55000000E+002).x), uint((vec4(_TMP0, _TMP0, _TMP0, _TMP0)*2.55000000E+002).y), uint((vec4(_TMP0, _TMP0, _TMP0, _TMP0)*2.55000000E+002).z), uint((vec4(_TMP0, _TMP0, _TMP0, _TMP0)*2.55000000E+002).w));
    _b0023 = _bin0023.x | (_bin0023.y << 8u) | (_bin0023.z << 16u) | (_bin0023.w << 24u);
    _c00023 = int(((_b0023 >> _offset00023) & 1u));
    _c10023 = int(((_b0023 >> (_offset00023 + 1u)) & 1u));
    _spp0 = uint((_c00023 + _c10023));
    _Density = _sm00 + _smp0;
    _Density = _Density + _s000 + _s0p0;
    _Density = _Density + _sp00 + _spp0;
    _oColor01 = vec4(float(_Density)*1.25000000E-001, float(_Density)*1.25000000E-001, float(_Density)*1.25000000E-001, float(_Density)*1.25000000E-001);
    cg_FragColor = _oColor01;
} // main end
]] 
-- 
------------------------------------------------------------------------------------------------------------  
