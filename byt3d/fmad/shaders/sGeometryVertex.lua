------------------------------------------------------------------------------------------------------------  
-- 
-- Autogenerated lua Vertex Shaders 
-- 
sGeometryVertex_vert = [[  
// glslv output by Cg compiler
// cgc version 3.1.0013, build date Apr 18 2012
// command line args: -quiet -profile glslv -po version=330
// source file: sGeometryVertex.vcg
//vendor NVIDIA Corporation
//version 3.1.0.13
//profile glslv
//program main
//semantic main.modelViewProj
//semantic main.Local2View
//semantic main.Local2World
//semantic main.eyeWorld
//var float4x4 modelViewProj :  : _modelViewProj1[0], 4 : 6 : 1
//var float4x4 Local2View :  : _Local2View1[0], 4 : 7 : 1
//var float4x4 Local2World :  : _Local2World1[0], 4 : 8 : 1
//var float3 eyeWorld :  : _eyeWorld1 : 9 : 1
//var float3 position : $vin.POSITION : POSITION : 0 : 1
//var float4 color : $vin.COLOR : COLOR : 1 : 1
//var float2 tex : $vin.TEXCOORD0 : TEXCOORD0 : 2 : 1
//var float3 N : $vin.TEXCOORD1 : TEXCOORD1 : 3 : 1
//var float3 T : $vin.TEXCOORD2 :  : 4 : 0
//var float3 B : $vin.TEXCOORD3 : TEXCOORD3 : 5 : 1
//var float4 main.position : $vout.POSITION : HPOS : -1 : 1
//var float4 main.color : $vout.COLOR : COLOR : -1 : 1
//var float2 main.tex : $vout.TEXCOORD0 : TEXCOORD0 : -1 : 1
//var float3 main.N : $vout.TEXCOORD1 : TEXCOORD1 : -1 : 1
//var float4 main.T : $vout.TEXCOORD2 : TEXCOORD2 : -1 : 1
//var float3 main.B : $vout.TEXCOORD3 : TEXCOORD3 : -1 : 1
//var float3 main.R : $vout.TEXCOORD4 : TEXCOORD4 : -1 : 1

struct Output {
    vec4 _position2;
    vec4 _color1;
    vec2 _tex1;
    vec3 _N1;
    vec4 _T1;
    vec3 _B1;
    vec3 _R;
};

float _TMP4;
float _TMP3;
float _TMP2;
uniform vec4 _modelViewProj1[4];
uniform vec4 _Local2View1[4];
uniform vec4 _Local2World1[4];
uniform vec3 _eyeWorld1;
vec4 _r0012;
vec4 _v0012;
vec4 _r0022;
vec4 _v0022;
vec3 _v0032;
vec4 _r0038;
vec4 _v0038;
vec4 _r0052;
vec4 _v0052;
vec4 _r0062;
vec4 _v0062;
varying vec4 COLOR;
varying vec4 TEXCOORD0;
varying vec4 TEXCOORD1;
varying vec4 TEXCOORD3;
varying vec4 cg_Vertex;
varying vec4 cg_FrontColor;
varying vec4 cg_TexCoord4;
varying vec4 cg_TexCoord1;
varying vec4 cg_TexCoord3;
varying vec4 cg_TexCoord0;
varying vec4 cg_TexCoord2;

 // main procedure, the original name was main
void main()
{

    Output _OUT;
    vec3 _viewWorld;

    _v0012 = vec4(cg_Vertex.x, cg_Vertex.y, cg_Vertex.z, 1.00000000E+000);
    _r0012.x = dot(_Local2World1[0], _v0012);
    _r0012.y = dot(_Local2World1[1], _v0012);
    _r0012.z = dot(_Local2World1[2], _v0012);
    _v0022 = vec4(cg_Vertex.x, cg_Vertex.y, cg_Vertex.z, 1.00000000E+000);
    _r0022.x = dot(_modelViewProj1[0], _v0022);
    _r0022.y = dot(_modelViewProj1[1], _v0022);
    _r0022.z = dot(_modelViewProj1[2], _v0022);
    _r0022.w = dot(_modelViewProj1[3], _v0022);
    _v0032 = _r0012.xyz - _eyeWorld1;
    _TMP2 = dot(_v0032, _v0032);
    _TMP3 = inversesqrt(_TMP2);
    _viewWorld = _TMP3*_v0032;
    _v0038 = vec4(TEXCOORD1.x, TEXCOORD1.y, TEXCOORD1.z, 0.00000000E+000);
    _r0038.x = dot(_Local2World1[0], _v0038);
    _r0038.y = dot(_Local2World1[1], _v0038);
    _r0038.z = dot(_Local2World1[2], _v0038);
    _TMP4 = dot(_r0038.xyz, _viewWorld);
    _OUT._R = _viewWorld - (2.00000000E+000*_r0038.xyz)*_TMP4;
    _v0052 = vec4(TEXCOORD1.x, TEXCOORD1.y, TEXCOORD1.z, 0.00000000E+000);
    _r0052.x = dot(_Local2View1[0], _v0052);
    _r0052.y = dot(_Local2View1[1], _v0052);
    _r0052.z = dot(_Local2View1[2], _v0052);
    _v0062 = vec4(cg_Vertex.x, cg_Vertex.y, cg_Vertex.z, 1.00000000E+000);
    _r0062.x = dot(_Local2View1[0], _v0062);
    _r0062.y = dot(_Local2View1[1], _v0062);
    _r0062.z = dot(_Local2View1[2], _v0062);
    _r0062.w = dot(_Local2View1[3], _v0062);
    cg_TexCoord2 = _r0062;
    cg_TexCoord0.xy = TEXCOORD0.xy;
    cg_TexCoord3.xyz = TEXCOORD3.xyz;
    cg_TexCoord1.xyz = _r0052.xyz;
    cg_TexCoord4.xyz = _OUT._R;
    gl_Position = _r0022;
    cg_FrontColor = COLOR;
    return;
} // main end
]] 
-- 
------------------------------------------------------------------------------------------------------------  
