------------------------------------------------------------------------------------------------------------  
-- 
-- Autogenerated lua Vertex Shaders 
-- 
sParticleRenderVertex_vert = [[  
// glslv output by Cg compiler
// cgc version 3.1.0013, build date Apr 18 2012
// command line args: -quiet -profile glslv -po version=330
// source file: sParticleRenderVertex.vcg
//vendor NVIDIA Corporation
//version 3.1.0.13
//profile glslv
//program main
//semantic main.modelViewProj
//semantic main.Local2View
//var float4x4 modelViewProj :  : _modelViewProj1[0], 4 : 4 : 1
//var float3 position : $vin.POSITION : POSITION : 0 : 1
//var float4 color : $vin.COLOR : COLOR : 1 : 1
//var float2 tex : $vin.TEXCOORD0 : TEXCOORD0 : 2 : 1
//var float1 age : $vin.TEXCOORD1 : TEXCOORD1 : 3 : 1
//var float4 main.position : $vout.POSITION : HPOS : -1 : 1
//var float4 main.color : $vout.COLOR : COLOR : -1 : 1
//var float2 main.tex : $vout.TEXCOORD0 : TEXCOORD0 : -1 : 1
//var float1 main.age : $vout.TEXCOORD1 : TEXCOORD1 : -1 : 1

struct Output {
    vec4 _position2;
    vec4 _color1;
    vec2 _tex1;
    float _age1;
};

uniform vec4 _modelViewProj1[4];
vec4 _r0004;
vec4 _v0004;
varying vec4 COLOR;
varying vec4 TEXCOORD0;
varying vec4 TEXCOORD1;
varying vec4 cg_Vertex;
varying vec4 cg_FrontColor;
varying vec4 cg_TexCoord1;
varying vec4 cg_TexCoord0;

 // main procedure, the original name was main
void main()
{

    float _age;

    _age = TEXCOORD1.x;
    _v0004 = vec4(cg_Vertex.x, cg_Vertex.y, cg_Vertex.z, 1.00000000E+000);
    _r0004.x = dot(_modelViewProj1[0], _v0004);
    _r0004.y = dot(_modelViewProj1[1], _v0004);
    _r0004.z = dot(_modelViewProj1[2], _v0004);
    _r0004.w = dot(_modelViewProj1[3], _v0004);
    cg_TexCoord0.xy = TEXCOORD0.xy;
    cg_TexCoord1.x = _age;
    gl_Position = _r0004;
    cg_FrontColor = COLOR;
    return;
} // main end
]] 
-- 
------------------------------------------------------------------------------------------------------------  
