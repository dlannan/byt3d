------------------------------------------------------------------------------------------------------------  
-- 
-- Autogenerated lua Fragment Shaders 
-- 
sAAFragment_frag = [[  
// glslf output by Cg compiler
// cgc version 3.1.0013, build date Apr 18 2012
// command line args: -quiet -profile glslf -po version=330
// source file: sAAFragment.fcg
//vendor NVIDIA Corporation
//version 3.1.0.13
//profile glslf
//program main
//semantic main.samplerLBuffer0
//semantic main.samplerLBuffer1
//semantic main.samplerGBuffer0
//semantic main.samplerGBuffer1
//semantic main.samplerGBuffer2
//semantic main.samplerGBuffer3
//semantic main.samplerOutBuffer
//semantic main.texelScale
//semantic main.CenterScale
//semantic main.EdgeScale
//semantic main.EdgeCutoff
//var sampler2D samplerOutBuffer :  : _samplerOutBuffer1 : 9 : 1
//var float2 texelScale :  : _texelScale1 : 10 : 1
//var float CenterScale :  : _CenterScale1 : 11 : 1
//var float EdgeScale :  : _EdgeScale1 : 12 : 1
//var float EdgeCutoff :  : _EdgeCutoff1 : 13 : 1
//var float2 tex : $vin.TEXCOORD0 : TEXCOORD0 : 0 : 1
//var float4 iColor : $vin.COLOR :  : 1 : 0
//var float4 oColor : $vout.COLOR : COLOR : 2 : 1

precision mediump float;

vec4 _oColor1;
vec4 _TMP0;
uniform sampler2D _samplerOutBuffer1;
uniform vec2 _texelScale1;
uniform float _CenterScale1;
uniform float _EdgeScale1;
uniform float _EdgeCutoff1;
vec2 _c0019;
vec2 _c0021;
vec4 _a0023;
vec4 _a0025;
vec4 _b0027;
vec2 _c0031;
vec2 _c0033;
vec2 _c0035;
vec2 _c0037;
vec2 _c0039;
vec2 _c0041;
varying vec4 cg_TexCoord0;

 // main procedure, the original name was main
void main()
{

    vec4 _OutO;
    vec4 _OutR;
    vec4 _OutD;
    vec4 _H;
    vec4 _V;
    vec4 _B;
    vec4 _Out0;
    vec4 _Out1;
    vec4 _Out2;
    vec4 _Out3;
    vec4 _Out4;
    vec4 _Out6;
    vec4 _Out8;
    vec4 _Out;

    _OutO = texture2D(_samplerOutBuffer1, cg_TexCoord0.xy);
    _c0019 = cg_TexCoord0.xy + vec2(_texelScale1.x, 0.00000000E+000);
    _OutR = texture2D(_samplerOutBuffer1, _c0019);
    _c0021 = cg_TexCoord0.xy + vec2(0.00000000E+000, _texelScale1.y);
    _OutD = texture2D(_samplerOutBuffer1, _c0021);
    _a0023 = _OutO - _OutR;
    _H = abs(_a0023);
    _a0025 = _OutO - _OutD;
    _V = abs(_a0025);
    _b0027 = ((_H + _V) - vec4(_EdgeCutoff1, _EdgeCutoff1, _EdgeCutoff1, _EdgeCutoff1))*vec4(_EdgeScale1, _EdgeScale1, _EdgeScale1, _EdgeScale1);
    _TMP0 = min(vec4( 1.00000000E+000, 1.00000000E+000, 1.00000000E+000, 1.00000000E+000), _b0027);
    _B = max(vec4( 0.00000000E+000, 0.00000000E+000, 0.00000000E+000, 0.00000000E+000), _TMP0);
    _B = _CenterScale1*(vec4( 1.00000000E+000, 1.00000000E+000, 1.00000000E+000, 1.00000000E+000) - _B);
    _c0031 = cg_TexCoord0.xy + vec2(-_texelScale1.x, -_texelScale1.y);
    _Out0 = texture2D(_samplerOutBuffer1, _c0031);
    _c0033 = cg_TexCoord0.xy + vec2(0.00000000E+000, -_texelScale1.y);
    _Out1 = texture2D(_samplerOutBuffer1, _c0033);
    _c0035 = cg_TexCoord0.xy + vec2(_texelScale1.x, _texelScale1.y);
    _Out2 = texture2D(_samplerOutBuffer1, _c0035);
    _c0037 = cg_TexCoord0.xy + vec2(-_texelScale1.x, 0.00000000E+000);
    _Out3 = texture2D(_samplerOutBuffer1, _c0037);
    _Out4 = _B*_OutO;
    _c0039 = cg_TexCoord0.xy + vec2(-_texelScale1.x, _texelScale1.y);
    _Out6 = texture2D(_samplerOutBuffer1, _c0039);
    _c0041 = cg_TexCoord0.xy + vec2(_texelScale1.x, _texelScale1.y);
    _Out8 = texture2D(_samplerOutBuffer1, _c0041);
    _Out = (_Out0 + _Out1 + _Out2 + _Out3 + _Out4 + _OutR + _Out6 + _OutD + _Out8)/(8.00000000E+000 + _B);
    _oColor1 = _Out;
    gl_FragColor = _Out;
} // main end
]] 
-- 
------------------------------------------------------------------------------------------------------------  
