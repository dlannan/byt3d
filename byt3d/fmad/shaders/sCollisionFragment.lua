------------------------------------------------------------------------------------------------------------  
-- 
-- Autogenerated lua Fragment Shaders 
-- 
sCollisionFragment_frag = [[  
// glslf output by Cg compiler
// cgc version 3.1.0013, build date Apr 18 2012
// command line args: -quiet -profile glslf -po version=330
// source file: sCollisionFragment.fcg
//vendor NVIDIA Corporation
//version 3.1.0.13
//profile glslf
//program main
//var float4 Pos : $vin.WPOS : WPOS : 0 : 1
//var float4 oColor0 : $vout.COLOR0 : COLOR0 : 1 : 1
//var float4 oColor1 : $vout.COLOR1 : COLOR1 : 2 : 1
//var float4 oColor2 : $vout.COLOR2 : COLOR2 : 3 : 1
//var float4 oColor3 : $vout.COLOR3 : COLOR3 : 4 : 1
//var float4 oColor4 : $vout.COLOR4 : COLOR4 : 5 : 1
//var float4 oColor5 : $vout.COLOR5 : COLOR5 : 6 : 1
//var float4 oColor6 : $vout.COLOR6 : COLOR6 : 7 : 1
//var float4 oColor7 : $vout.COLOR7 : COLOR7 : 8 : 1

#version 330

#extension GL_ARB_draw_buffers : enable

vec4 _oColor01;
vec4 _oColor51;
vec4 _oColor21;
vec4 _oColor71;
vec4 _oColor41;
vec4 _oColor11;
vec4 _oColor61;
vec4 _oColor31;
uint _TMP5;
int _TMP4;
float _TMP3;
float _TMP2;
float _TMP1;
float _x0007;
out vec4 cg_FragColor;
out vec4 cg_FragData5;
out vec4 cg_FragData2;
out vec4 cg_FragData7;
out vec4 cg_FragData4;
out vec4 cg_FragData1;
out vec4 cg_FragData6;
out vec4 cg_FragData3;

 // main procedure, the original name was main
void main()
{

    int _bin;
    uint _b[8];
    uint _index;
    uint _shift;

    if (gl_FragCoord.z < 0.00000000E+000) { // if begin
        _TMP1 = 0.00000000E+000;
    } else {
        _TMP1 = gl_FragCoord.z;
    } // end if
    if (_TMP1 > 1.00000000E+000) { // if begin
        _TMP2 = 1.00000000E+000;
    } else {
        _TMP2 = _TMP1;
    } // end if
    _x0007 = _TMP2*2.56000000E+002;
    _TMP3 = floor(_x0007);
    _bin = int(_TMP3);
    if (_bin > 255) { // if begin
        _TMP4 = 255;
    } else {
        _TMP4 = _bin;
    } // end if
    if (_TMP4 >= 32) { // if begin
        _TMP5 = -1u;
    } else {
        _TMP5 = 0u;
    } // end if
    _b[0] = _TMP5;
    if (_TMP4 >= 64) { // if begin
        _TMP5 = -1u;
    } else {
        _TMP5 = 0u;
    } // end if
    _b[1] = _TMP5;
    if (_TMP4 >= 96) { // if begin
        _TMP5 = -1u;
    } else {
        _TMP5 = 0u;
    } // end if
    _b[2] = _TMP5;
    if (_TMP4 >= 128) { // if begin
        _TMP5 = -1u;
    } else {
        _TMP5 = 0u;
    } // end if
    _b[3] = _TMP5;
    if (_TMP4 >= 160) { // if begin
        _TMP5 = -1u;
    } else {
        _TMP5 = 0u;
    } // end if
    _b[4] = _TMP5;
    if (_TMP4 >= 192) { // if begin
        _TMP5 = -1u;
    } else {
        _TMP5 = 0u;
    } // end if
    _b[5] = _TMP5;
    if (_TMP4 >= 224) { // if begin
        _TMP5 = -1u;
    } else {
        _TMP5 = 0u;
    } // end if
    _b[6] = _TMP5;
    if (_TMP4 >= 256) { // if begin
        _TMP5 = -1u;
    } else {
        _TMP5 = 0u;
    } // end if
    _b[7] = _TMP5;
    _index = uint((_TMP4 >> 5));
    _shift = uint((_TMP4 & 31));
    _b[(int(_index))] = _b[(int(_index))] | ((1u << (_shift + 1u)) - 1u);
    _oColor01 = vec4(float((_b[0] & 255u)), float(((_b[0] >> 8u) & 255u)), float(((_b[0] >> 16u) & 255u)), float(((_b[0] >> 24u) & 255u)))*3.92156886E-003;
    _oColor11 = vec4(float((_b[1] & 255u)), float(((_b[1] >> 8u) & 255u)), float(((_b[1] >> 16u) & 255u)), float(((_b[1] >> 24u) & 255u)))*3.92156886E-003;
    _oColor21 = vec4(float((_b[2] & 255u)), float(((_b[2] >> 8u) & 255u)), float(((_b[2] >> 16u) & 255u)), float(((_b[2] >> 24u) & 255u)))*3.92156886E-003;
    _oColor31 = vec4(float((_b[3] & 255u)), float(((_b[3] >> 8u) & 255u)), float(((_b[3] >> 16u) & 255u)), float(((_b[3] >> 24u) & 255u)))*3.92156886E-003;
    _oColor41 = vec4(float((_b[4] & 255u)), float(((_b[4] >> 8u) & 255u)), float(((_b[4] >> 16u) & 255u)), float(((_b[4] >> 24u) & 255u)))*3.92156886E-003;
    _oColor51 = vec4(float((_b[5] & 255u)), float(((_b[5] >> 8u) & 255u)), float(((_b[5] >> 16u) & 255u)), float(((_b[5] >> 24u) & 255u)))*3.92156886E-003;
    _oColor61 = vec4(float((_b[6] & 255u)), float(((_b[6] >> 8u) & 255u)), float(((_b[6] >> 16u) & 255u)), float(((_b[6] >> 24u) & 255u)))*3.92156886E-003;
    _oColor71 = vec4(float((_b[7] & 255u)), float(((_b[7] >> 8u) & 255u)), float(((_b[7] >> 16u) & 255u)), float(((_b[7] >> 24u) & 255u)))*3.92156886E-003;
    cg_FragData3 = _oColor31;
    cg_FragData6 = _oColor61;
    cg_FragData1 = _oColor11;
    cg_FragData4 = _oColor41;
    cg_FragData7 = _oColor71;
    cg_FragData2 = _oColor21;
    cg_FragData5 = _oColor51;
    cg_FragColor = _oColor01;
} // main end
]] 
-- 
------------------------------------------------------------------------------------------------------------  
