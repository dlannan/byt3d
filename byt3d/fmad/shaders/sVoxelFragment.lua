------------------------------------------------------------------------------------------------------------  
-- 
-- Autogenerated lua Fragment Shaders 
-- 
sVoxelFragment_frag = [[  
// glslf output by Cg compiler
// cgc version 3.1.0013, build date Apr 18 2012
// command line args: -quiet -profile glslf -po version=330
// source file: sVoxelFragment.fcg
//vendor NVIDIA Corporation
//version 3.1.0.13
//profile glslf
//program main
//semantic main.zRange
//var float2 zRange :  : _zRange1 : 5 : 1
//var float4 Pos : $vin.WPOS : WPOS : 0 : 1
//var float4 iColor : $vin.COLOR :  : 1 : 0
//var float3 _N : $vin.TEXCOORD1 : TEXCOORD1 : 2 : 1
//var float ViewID : $vin.TEXCOORD2 : TEXCOORD2 : 3 : 1
//var float4 oColor : $vout.COLOR : COLOR : 4 : 1

#version 330

vec4 _oColor1;
float _TMP1;
float _TMP0;
uniform vec2 _zRange1;
in vec4 cg_TexCoord1;
in vec4 cg_TexCoord2;
out vec4 cg_FragColor;

 // main procedure, the original name was main
void main()
{

    ivec2 _View;
    float _xMin;
    float _yMin;
    float _xMax;
    float _yMax;
    vec3 _N1;

    _View = ivec2(int(cg_TexCoord2.x)%8, int((cg_TexCoord2.x/8.00000000E+000)));
    _xMin = float((_View.x*64));
    _yMin = float((_View.y*64));
    _xMax = float(((_View.x + 1)*64));
    _yMax = float(((_View.y + 1)*64));
    if (!(_xMin <= gl_FragCoord.x && gl_FragCoord.x <= _xMax)) { // if begin
        discard;
    } // end if
    if (!(_yMin <= gl_FragCoord.y && gl_FragCoord.y <= _yMax)) { // if begin
        discard;
    } // end if
    if (!(_zRange1.x <= gl_FragCoord.z && gl_FragCoord.z <= _zRange1.y)) { // if begin
        discard;
    } // end if
    _TMP0 = dot(cg_TexCoord1.xyz, cg_TexCoord1.xyz);
    _TMP1 = inversesqrt(_TMP0);
    _N1 = _TMP1*cg_TexCoord1.xyz;
    _oColor1 = vec4(_N1.x, _N1.y, _N1.z, 1.00000000E+000);
    cg_FragColor = _oColor1;
} // main end
]] 
-- 
------------------------------------------------------------------------------------------------------------  
